// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Clients {
  id        String   @id @default(uuid())
  nom       String
  email     String   @unique
  telephone String   
  adresse   String
  devies    Devis[]
  commandes Commandes[]
  createdAt DateTime @default(now())  // This sets the default value to the current timestamp when a record is created
  updatedAt DateTime @updatedAt       // This will automatically update the field to the current timestamp on each update
}

model Produits {
  id           String   @id @default(uuid())
  nom         String
  categorie    String
  prixAchat    Float
  prixVente    Float
  statut       String   // Use Enum if you have predefined statuses
  stock        Int
  achats       Achats[]
  ventes       Ventes[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Fournisseurs {
  id         String   @id @default(uuid())
  nom        String
  email      String   @unique
  telephone  String
  adresse    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}


model Commandes {
  id        String   @id @default(uuid())
  clientId  String
  client    Clients @relation(fields: [clientId], references: [id])
  montant   Float
  statut    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Devis {
  id         String   @id @default(uuid())
  numero     String   @unique
  clientId   String   // Foreign key to Clients table
  client     Clients  @relation(fields: [clientId], references: [id])
  montant    Float
  statut     String   // Use the existing Status enum
  validite   DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Achats {
  id            String   @id @default(uuid())
  produitId     String   // Foreign key to Product table
  produit       Produits  @relation(fields: [produitId], references: [id])
  stockActuel   Int
  prixAchat     Float    // Price per unit
  quantite      Int
  prixTotal     Float    @default(0) // Automatically calculated
  prixTTC       Float    @default(0) // Automatically calculated (with taxes)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Ventes {
  id            String   @id @default(uuid())
  produitId     String   // Foreign key to Product table
  produit       Produits  @relation(fields: [produitId], references: [id])
  stockActuel   Int
  prixAchat     Float    // Purchase price per unit
  prixVente     Float    // Sale price per unit
  quantite      Int
  prixTotal     Float    @default(0) // Automatically calculated
  prixTTC       Float    @default(0) // Automatically calculated (with taxes)
  marge         Float    @default(0) // Profit margin (calculated)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}



model Factures {
  id         String   @id @default(uuid())
  nom        String
  numero     String   @unique
  categorie  String
  montant    Float
  statut     String   // Use the existing Status enum
  echeance   DateTime // Due date
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}