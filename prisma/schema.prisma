generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Clients {
  id        String      @id @default(uuid())
  nom       String
  titre String?
  email     String?
  telephone String?
  mobile String?
  adresse   String?
  ice    String?
  note    String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  commandes Commandes[]
  devies    Devis[]
}

model Employes {
  id        String   @id @default(uuid())
  nom       String
  cin       String?
  rib       String?
  telephone String?
  adresse   String?
  role      String?
  salaire   Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Produits {
  id                String              @id @default(uuid())
  designation       String
  categorie         String?
  reference         String?
  prixAchat         Float?
  stock             Int?
  description       String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  achatsCommandes   AchatsCommandes[]
  CommandesProduits CommandesProduits[]
  groupProduits         ListProduits[]

}

model Items {
  id          String   @id @default(uuid())
  designation String
  categorie String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CommandesProduits {
  id         String    @id @default(uuid())
  commandeId String
  produitId  String
  montant    Float
  quantite   Float
  prixUnite  Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  commande   Commandes @relation(fields: [commandeId], references: [id], onDelete: Cascade)
  produit    Produits  @relation(fields: [produitId], references: [id], onDelete: Cascade)

  @@unique([commandeId, produitId])
}

model Fournisseurs {
  id                  String     @id @default(uuid())
  nom                 String
  email               String?
  telephone           String?
  adresse             String?
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  ice                 String?
  telephoneSecondaire String?
  commandesFournitures  CommandeFourniture[]
}

model Commandes {
  id               String              @id @default(uuid())
  numero           String              @unique
  clientId         String
  statut           String
  sousTotal        Float
  reduction        Int
  total            Float
  note             String?
  typeReduction    String              @default("%")
  avance           Int?
  totalDevi        Float
  totalPaye        Float?
  echeance         DateTime?
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  achatsCommande   AchatsCommandes[]
  client           Clients             @relation(fields: [clientId], references: [id], onDelete: Cascade)
  commandeProduits CommandesProduits[]
}

model AchatsCommandes {
  id             String     @id @default(uuid())
  produitId      String
  commandeId     String?
  quantite       Int
  prixUnite      Float?
  payer          Boolean
  statut         String
  description    String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  commandeClient Commandes? @relation(fields: [commandeId], references: [id], onDelete: Cascade)
  produit        Produits   @relation(fields: [produitId], references: [id], onDelete: Cascade)

  @@unique([commandeId, produitId])
}

model CommandeFourniture {
  id           String   @id @default(uuid())
  numero       String   @unique
  fournisseur  Fournisseurs @relation(fields: [fournisseurId], references: [id])
  fournisseurId String

   groups        OrdersGroups[]

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model OrdersGroups {
  id        String       @id @default(uuid())
commandeNumero String?  
 clientName String?  
commandeFourniture    CommandeFourniture?    @relation(fields: [commandeFournitureId], references: [id])
  commandeFournitureId  String?
  produits  ListProduits[]
}

model ListProduits {
  id       String   @id @default(uuid())
  group    OrdersGroups    @relation(fields: [groupId], references: [id])
  groupId  String
  produit  Produits @relation(fields: [produitId], references: [id])
  produitId String
  quantite Float
}

model Articls {
  id          String   @id @default(uuid())
  deviId      String
  designation String
  montant     Float
  quantite    Int
  prixUnite   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  width       Float?
  length      Float?
  unite      String @default("U")
  key         String   @unique
  devi        Devis    @relation(fields: [deviId], references: [id], onDelete: Cascade)
}

model Devis {
  id            String    @id @default(uuid())
  numero        String    @unique
  clientId      String
  statut        String
  sousTotal     Float
  reduction     Int
  total         Float
  note          String?
  typeReduction String    @default("%")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tva           Float
  articls       Articls[]
  client        Clients   @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model Factures {
  id            String    @id @default(uuid())
  lable         String
  numero        String    @unique
  type          String
  montant       Float?
  payer         Boolean   @default(false)
  dateEmission  Int?
  dateReglement DateTime?
  description   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model DepensesVariantes {
  id          String   @id @default(uuid())
  label       String
  montant     Float
  compte      String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  numero      String   @unique
}

model Transactions {
  id        String   @id @default(uuid())
  type      String
  montant   Float
  compte    String?
  lable     String?
  reference String?
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TachesEmployes {
  id    String @id @default(uuid())
  tache String
}

model CategoriesProduits {
  id        String @id @default(uuid())
  categorie String
}

model ComptesBancaires {
  id     String @id @default(uuid())
  compte String
  solde  Float      @default(0)
}

model ModesPaiement {
  id           String @id @default(uuid())
  modePaiement String
}

model InfoEntreprise {
  id        Int      @id @default(1)
  nom       String
  telephone String
  mobile    String?
  email     String?
  adresse   String
  logoUrl   String?
  slogan    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comptabilite {
  id        Int      @id @default(1)
  caisse     Float
}
