generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Clients {
  id        String      @id @default(uuid())
  nom       String
  email     String?
  telephone String?
  adresse   String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  commandes Commandes[]
  devies    Devis[]
}

model Employes {
  id        String   @id @default(uuid())
  nom       String
  cin       String?
  rib       String?
  telephone String?
  adresse   String?
  role      String?
  salaire   Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Produits {
  id                String              @id @default(uuid())
  designation       String
  categorie         String?
  prixAchat         Float?
  prixVente         Float?
  stock             Int?
  fournisseurId     String?
  description       String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  achatsCommandes   AchatsCommandes[]
  CommandesProduits CommandesProduits[]
  fournisseur       Fournisseurs?       @relation(fields: [fournisseurId], references: [id], onDelete: Cascade)
}

model CommandesProduits {
  id         String    @id @default(uuid())
  commandeId String
  produitId  String
  montant    Float
  quantite   Int
  prixUnite  Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  produit    Produits  @relation(fields: [produitId], references: [id], onDelete: Cascade)
  commande   Commandes @relation(fields: [commandeId], references: [id], onDelete: Cascade)

  @@unique([commandeId, produitId])
}

model Fournisseurs {
  id                  String     @id @default(uuid())
  nom                 String
  email               String?
  telephone           String?
  adresse             String?
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  ice                 String?
  telephoneSecondaire String?
  produits            Produits[]
}

model Commandes {
  id               String              @id @default(uuid())
  numero           String              @unique
  clientId         String
  statut           String
  sousTotal        Float
  fraisLivraison   Float
  reduction        Int
  total            Float
  note             String?
  typeReduction    String              @default("%")
  avance           Int?
  echeance         DateTime?
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  achatsCommande   AchatsCommandes[]
  client           Clients             @relation(fields: [clientId], references: [id], onDelete: Cascade)
  commandeProduits CommandesProduits[]
}

model AchatsCommandes {
  id             String     @id @default(uuid())
  produitId      String
  commandeId     String?
  quantite       Int
  prixUnite      Float?
  payer          Boolean
  statut         String
  description    String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  commandeClient Commandes? @relation(fields: [commandeId], references: [id], onDelete: Cascade)
  produit        Produits   @relation(fields: [produitId], references: [id], onDelete: Cascade)

  @@unique([commandeId, produitId])
}

model Articls {
  id          String   @id @default(uuid())
  deviId      String
  designation String
  montant     Float
  quantite    Int
  prixUnite   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  devi        Devis    @relation(fields: [deviId], references: [id], onDelete: Cascade)
}

model Devis {
  id             String    @id @default(uuid())
  numero         String    @unique
  clientId       String
  statut         String
  sousTotal      Float
  fraisLivraison Float
  reduction      Int
  total          Float
  note           String?
  typeReduction  String    @default("%")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  articls        Articls[]
  client         Clients   @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model Factures {
  id          String   @id @default(uuid())
  lable       String
  numero      String   @unique
  type        String
  montant     Float
  payer       Boolean @default(false)
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

